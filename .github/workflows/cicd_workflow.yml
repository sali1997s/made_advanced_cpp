name: CI

on:
  push:
    branches: [ "hw1" ]
  pull_request:
    branches: [ "main" ]


jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    container: leshiy1295/gcc_linters_valgrind_cmake_gtest

    steps:
    - uses: actions/checkout@v3
    - name: pwd
      run: pwd 

    - name: ls
      run: ls

    - name: build
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake ./hw1 -B ./hw1/build

    - name: make
      # Build your program with the given configuration
      working-directory: ./hw1/build
      run: make

    - name: test
      working-directory: ./hw1/build/tests
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ./test_solution

    - name: valgrid_check
      working-directory: ./hw1/build/
      run: valgrind --tool=memcheck --leak-check=yes ./solution 


    - name: installing lcov
      run: apt install lcov -y

    - name: test_cov
      working-directory: ./hw1/build
      run: lcov -t "tests/test_solution" -o coverage.info -c -d src
